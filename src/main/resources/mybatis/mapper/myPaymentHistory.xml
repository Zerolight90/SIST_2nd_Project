<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="myPaymentHistory">

    <resultMap id="paymentHistoryResultMap" type="mybatis.vo.MyPaymentHistoryVO">
        <result property="paymentType" column="paymentType"/>
        <result property="paymentDate" column="paymentDate"/>
        <result property="orderId" column="orderId"/>
        <result property="paymentKey" column="paymentKey"/>
        <result property="paymentStatus" column="paymentStatus"/>
        <result property="itemTitle" column="itemTitle"/>
        <result property="itemPosterUrl" column="itemPosterUrl"/>
        <result property="theaterInfo" column="theaterInfo"/>
        <result property="screenDate" column="screenDate"/>
        <result property="prodPrice" column="prodPrice"/>
    </resultMap>

    <select id="getTotalHistoryCount" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM payment p
        <where>
            <choose>
                <when test="userType == 'member'">
                    AND p.userIdx = #{userKey}
                </when>
                <when test="userType == 'nonMember'">
                    AND p.nIdx2 = #{userKey}
                </when>
            </choose>
            <if test="statusFilter != null and statusFilter != ''">
                AND p.paymentStatus = #{statusFilter}
            </if>
            <if test="yearFilter != null and yearFilter != ''">
                AND YEAR(p.paymentDate) = #{yearFilter}
            </if>
            <if test="typeFilter != null and typeFilter != ''">
                AND p.paymentType = #{typeFilter}
            </if>
        </where>
    </select>

    <select id="getHistoryList" parameterType="map" resultMap="paymentHistoryResultMap">
        -- 영화 예매 내역 (paymentType = 0)
        SELECT
        p.paymentType,
        p.paymentDate,
        p.orderId,
        p.paymentTransactionId AS paymentKey,
        p.paymentStatus,
        m.name AS itemTitle,
        m.poster AS itemPosterUrl,
        CONCAT(t.tName, ' ', s.sName) AS theaterInfo,
        tt.startTime AS screenDate,
        NULL AS prodPrice,
        NULL AS quantity
        FROM
        payment p
        JOIN reservation r ON p.reservIdx = r.reservIdx
        JOIN time_table tt ON r.timeTableIdx = tt.timeTableIdx
        JOIN movie m ON tt.mIdx = m.mIdx
        JOIN theater t ON tt.tIdx = t.tIdx
        -- ★★★★★ 오타 수정: s.Idx -> s.sIdx ★★★★★
        JOIN screen s ON tt.sIdx = s.sIdx
        <where>
            p.paymentType = 0
            <choose>
                <when test="userType == 'member'">
                    AND p.userIdx = #{userKey}
                </when>
                <when test="userType == 'nonMember'">
                    AND p.nIdx2 = #{userKey}
                </when>
            </choose>
            <if test="statusFilter != null and statusFilter != ''">
                AND p.paymentStatus = #{statusFilter}
            </if>
            <if test="yearFilter != null and yearFilter != ''">
                AND YEAR(p.paymentDate) = #{yearFilter}
            </if>
            <if test="typeFilter != null and typeFilter != ''">
                AND p.paymentType = #{typeFilter}
            </if>
        </where>

        UNION ALL

        -- 스토어 구매 내역 (paymentType = 1)
        SELECT
        p.paymentType,
        p.paymentDate,
        p.orderId,
        p.paymentTransactionId AS paymentKey,
        p.paymentStatus,
        pr.prodName AS itemTitle,
        pr.prodImg AS itemPosterUrl,
        NULL AS theaterInfo,
        NULL AS screenDate,
        pr.prodPrice,
        1 AS quantity
        FROM
        payment p
        JOIN product pr ON p.prodIdx = pr.prodIdx
        <where>
            p.paymentType = 1
            <choose>
                <when test="userType == 'member'">
                    AND p.userIdx = #{userKey}
                </when>
                <when test="userType == 'nonMember'">
                    AND p.nIdx2 = #{userKey}
                </when>
            </choose>
            <if test="statusFilter != null and statusFilter != ''">
                AND p.paymentStatus = #{statusFilter}
            </if>
            <if test="yearFilter != null and yearFilter != ''">
                AND YEAR(p.paymentDate) = #{yearFilter}
            </if>
            <if test="typeFilter != null and typeFilter != ''">
                AND p.paymentType = #{typeFilter}
            </if>
        </where>

        ORDER BY paymentDate DESC
        LIMIT #{begin}, #{end}
    </select>

</mapper>